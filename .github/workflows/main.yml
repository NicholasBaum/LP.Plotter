name: Build and Deploy to GithubPages

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write
    
concurrency:
      group: "pages"
      cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3      
      - name: Install .Net
        uses: actions/setup-dotnet@v1
        with: 
          dotnet-version: 7.x
      - name: build
        run: |
          dotnet workload install wasm-tools
          dotnet workload restore
          dotnet publish LP.Plotter/LP.Plotter.csproj -c Release -o publish -nologo
      - name: Change base-tag in index.html from / to ${{ github.event.repository.name }}
        run:  sed -i 's/<base href="\/" \/>/<base href="\/LP.Plotter\/" \/>/g' publish/wwwroot/index.html

      - name: Add .nojekyll file otherwise it removes files
        run: touch publish/wwwroot/.nojekyll
      - 
        name: show stuff
        run: |
             basename publish/
             basename publish/wwwroot
      # the way I understand this, is this action pushes your build folder to the gh-pages branch
      # and if you configured the repo to serve the static files from the gh-pages branch the site will be reachable
      # the advantage of doing it like this is that you can see the served files in the gh-pages branch
      # although the github deeploying routine could actually change something

      # the more general approach is to build it, upload an artifact with actions/upload-pages-artifact@v1 
      # and serve it with actions/deploy-pages@v2
      # in this case you can download the artifact to see whats actually served but the artifact gets deleted after 1h or so
      - uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: publish/wwwroot