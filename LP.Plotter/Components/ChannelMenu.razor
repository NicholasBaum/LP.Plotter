@using LP.Plotter.Data;
@using LP.Plotter.Services;
@using System.Collections.Specialized;

@implements IDisposable;

<div style="@Style">
    <ul>
        @foreach (var c in PlotData.Sets)
        {
            <li>@c.Name</li>
        }
    </ul>
</div>

@code {
    #pragma warning disable CS8618
    [Parameter]
    public string Style { get; set; }
    [Parameter, EditorRequired]
    public ChannelPlotModel PlotData { get; set; }
#pragma warning restore CS8618

    private ChannelPlotModel? lastDataModel;

    private void Redraw(object? sender, EventArgs e)
    {
        StateHasChanged();
    }  

    private void DataChanged(object? sender, EventArgs e)
    {
        StateHasChanged();
    }

    protected override void OnParametersSet()
    {
        if (lastDataModel != PlotData)
        {
            if (lastDataModel is not null)
            {
                lastDataModel.Changed -= Redraw;
                lastDataModel = null;
            }
            if (PlotData is not null)
            {
                PlotData.Changed += Redraw;
                lastDataModel = PlotData;
            }
        }
    }

    public void Dispose()
    {
        if (PlotData is not null)
            PlotData.Changed -= Redraw;
    }
}