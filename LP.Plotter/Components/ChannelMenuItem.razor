@using LP.Plotter.Data;
@using System.Globalization;
@using LP.Plotter.Utilities;
@using MudBlazor.Utilities;
@using OxyPlot;

@inject IDialogService dialogService;

@code {
#pragma warning disable CS8618

    [CascadingParameter]
    public ChannelPlotModel Model { get; set; }

    [Parameter, EditorRequired]
    public VChannelVM Channel { get; set; }
#pragma warning restore CS8618

    private string GetColor()
    {
        var c = Channel.ActualColor;
        return string.Format(CultureInfo.InvariantCulture, "#{0:x2}{1:x2}{2:x2}", c.R, c.G, c.B);
    }

    private void VisibilityToggled(bool toggled)
    {
        Channel.IsVisible = !Channel.IsVisible;
        Model.Refresh();
    }

    private async Task EditChannelClick(VChannelVM channel)
    {
        var parameters = new DialogParameters<EditChannelDialog> { { x => x.Channel, Channel } }; // dictionary intiliazer, it calls a fitting Add method overload
        var dialog = await dialogService.ShowAsync<EditChannelDialog>($"Edit {Channel.Name}", parameters);
        var result = await dialog.Result;

        if (!result.Canceled)
            Model.Refresh();
    }


    private void ToggleColorPicker()
    {
        ShowColorPicker = !ShowColorPicker;
    }
    public bool ShowColorPicker = false;
    public MudColor CurrentColor
    {
        get => Channel.Color == OxyColors.Automatic ? Channel.ActualColor.ToMudColor() : Channel.Color.ToMudColor();
        set { Channel.Color = value.ToOxyColor(); Model.Refresh(); }
    }
}

<div style="display:flex; flex-direction: row; justify-content: space-between; align-items: center; user-select: none;">
    <div style="display:flex; flex-direction: row; justify-content: start; align-items: center">
        <MudMenu Style="margin-right:10px">
            <ActivatorContent>
                <a style="width: 15px; height: 15px; background-color:@CurrentColor; cursor: pointer;"></a>
            </ActivatorContent>
            <ChildContent>
                <div class="d-flex flex-column">
                    <MudColorPicker PickerVariant="PickerVariant.Static"
                                    DisableAlpha="true"
                                    DisableModeSwitch="true"
                                    @bind-Value="@CurrentColor"></MudColorPicker>
                </div>
            </ChildContent>
        </MudMenu>

        <MudToggleIconButton Toggled="@Channel.IsVisible"
                             ToggledChanged="VisibilityToggled"
                             Size="Size.Small"
                             ToggledSize="Size.Small"
                             Icon="@Icons.Material.Outlined.RemoveRedEye" Color="@Color.Surface"
                             ToggledIcon="@Icons.Material.Filled.RemoveRedEye" ToggledColor="@Color.Primary"
                             Style="margin-right:10px" />
        <MudText Typo="Typo.body2">@Channel.Name</MudText>
    </div>
    <MudIconButton Icon="@Icons.Material.Filled.Edit"
                   Size="Size.Small"
                   Color="Color.Primary"
                   OnClick="@(_=>EditChannelClick(Channel))" />
</div>
